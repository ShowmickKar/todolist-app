{"version":3,"sources":["components/TodoList.jsx","components/App.jsx","index.js"],"names":["AddTodo","todos","setTodos","input","setInput","Form","Group","className","Label","style","justifyContent","Control","type","value","border","placeholder","onChange","e","target","Button","variant","onClick","preventDefault","length","text","completed","id","Math","random","Todo","todo","ListGroup","Item","borderRadius","fontSize","textDecoration","a","height","tempTodos","map","item","filter","List","TodoList","Card","Body","Title","color","textTransform","Subtitle","App","useState","useEffect","fetchTodos","saveTodos","localStorage","setItem","JSON","stringify","getItem","parse","Container","maxWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d682b187.chunk.js","sourcesContent":["import React from \"react\";\nimport { Card, Button, Form, ListGroup } from \"react-bootstrap\";\nimport { MdDone, MdDeleteForever } from \"react-icons/md\";\n\nconst AddTodo = ({ todos, setTodos, input, setInput }) => {\n  const addTodoHandler = (e) => {\n    e.preventDefault();\n    if (input.length < 1) {\n      return;\n    }\n    setTodos([\n      ...todos,\n      {\n        text: input,\n        completed: false,\n        id: Math.random() * 1000,\n      },\n    ]);\n    setInput(\"\");\n  };\n\n  return (\n    <Form>\n      <Form.Group className='mb-3 mx-3'>\n        <Form.Label>Add a Task</Form.Label>\n        <div className='d-flex' style={{ justifyContent: \"space-between\" }}>\n          <Form.Control\n            className='mb-1'\n            type='text'\n            value={input}\n            style={{ border: \"1px solid black\" }}\n            placeholder='Task Name'\n            onChange={(e) => {\n              setInput(e.target.value);\n            }}></Form.Control>\n          <Button\n            className='h-100 mx-1'\n            variant='secondary'\n            type='submit'\n            onClick={addTodoHandler}>\n            Add\n          </Button>\n        </div>\n      </Form.Group>\n    </Form>\n  );\n};\n\nconst Todo = ({ todos, setTodos, todo }) => {\n  const completeTodoHandler = (e) => {\n    const tempTodos = [...todos];\n    tempTodos.map((item) => {\n      if (item.id === todo.id) {\n        item.completed = !item.completed;\n        setTodos(tempTodos);\n        return;\n      }\n    });\n  };\n\n  const deleteTodoHandler = (e) => {\n    setTodos(todos.filter((item) => item.id !== todo.id));\n  };\n\n  return (\n    <ListGroup.Item\n      className='mb-2 d-flex'\n      style={{\n        borderRadius: \"14px\",\n        justifyContent: \"space-between\",\n      }}>\n      <div\n        className='d-flex align-items-center justify-content-center'\n        style={{\n          fontSize: \"15px\",\n          textDecoration: todo[\"completed\"] ? \"line-through\" : \"none\",\n        }}>\n        {todo[\"text\"]}\n      </div>\n      <div className='d-flex' style={{ justifyContent: \"space-between\" }}>\n        <Button\n          type='reset'\n          variant='primary'\n          a\n          className=' d-flex align-items-center justify-content-center mx-1'\n          style={{ height: \"30px\" }}\n          onClick={completeTodoHandler}>\n          <MdDone />\n        </Button>\n        <Button\n          type='reset'\n          variant='danger'\n          className=' d-flex align-items-center justify-content-center'\n          style={{ height: \"30px\" }}\n          onClick={deleteTodoHandler}>\n          <MdDeleteForever />\n        </Button>\n      </div>\n    </ListGroup.Item>\n  );\n};\n\nconst List = ({ todos, setTodos }) => {\n  return (\n    <ListGroup className='mx-2' variant='flush'>\n      {todos.map((todo) => {\n        return (\n          <Todo\n            key={Math.random() * 1000}\n            todos={todos}\n            setTodos={setTodos}\n            todo={todo}\n          />\n        );\n      })}\n    </ListGroup>\n  );\n};\n\nconst TodoList = ({ todos, setTodos, input, setInput }) => {\n  return (\n    <Card style={{ border: \"1px solid black\" }}>\n      <Card.Body>\n        <Card.Title\n          className='text-center'\n          style={{ color: \"black\", fontSize: \"24px\", textTransform: \"uppercase\"}}>\n          <h2>todo list</h2>\n        </Card.Title>\n        <Card.Subtitle\n          className='text-center mb-3'\n          style={{ color: \"grey\", textTransform: \"capitalize\" }}>\n          add your tasks here\n        </Card.Subtitle>\n        <AddTodo\n          todos={todos}\n          setTodos={setTodos}\n          input={input}\n          setInput={setInput}\n        />\n        <List todos={todos} setTodos={setTodos} />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TodoList;\n","import React, { useState, useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport TodoList from \"./TodoList\";\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [input, setInput] = useState(\"\");\n\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  useEffect(() => {\n    saveTodos();\n  }, [todos]);\n\n  const saveTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const fetchTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      setTodos(JSON.parse(localStorage.getItem(\"todos\")));\n    }\n  };\n\n  return (\n    <Container\n      className='d-flex align-items-center justify-content-center mt-5'\n      style={{}}>\n      <div className='w-100' style={{ maxWidth: \"400px\" }}>\n        <TodoList\n          todos={todos}\n          setTodos={setTodos}\n          input={input}\n          setInput={setInput}\n        />\n      </div>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}