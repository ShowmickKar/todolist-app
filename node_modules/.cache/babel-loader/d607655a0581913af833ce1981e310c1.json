{"ast":null,"code":"import _toConsumableArray from\"/home/showmick/todolist-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from\"react\";import{Card,Button,Form,ListGroup}from\"react-bootstrap\";import{MdDone,MdDeleteForever}from\"react-icons/md\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddTodo=function AddTodo(_ref){var todos=_ref.todos,setTodos=_ref.setTodos,input=_ref.input,setInput=_ref.setInput;var addTodoHandler=function addTodoHandler(e){e.preventDefault();if(input.length<1){return;}setTodos([].concat(_toConsumableArray(todos),[{text:input,completed:false,id:Math.random()*1000}]));setInput(\"\");};return/*#__PURE__*/_jsx(Form,{children:/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3 mx-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Add a Task\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex\",style:{justifyContent:\"space-between\"},children:[/*#__PURE__*/_jsx(Form.Control,{className:\"mb-1\",type:\"text\",value:input,style:{border:\"1px solid black\"},placeholder:\"Task Name\",onChange:function onChange(e){setInput(e.target.value);}}),/*#__PURE__*/_jsx(Button,{className:\"h-100 mx-1\",variant:\"secondary\",type:\"submit\",onClick:addTodoHandler,children:\"Add\"})]})]})});};var Todo=function Todo(_ref2){var todos=_ref2.todos,setTodos=_ref2.setTodos,todo=_ref2.todo;var completeTodoHandler=function completeTodoHandler(e){var tempTodos=_toConsumableArray(todos);tempTodos.map(function(item){if(item.id===todo.id){item.completed=!item.completed;setTodos(tempTodos);return;}});};var deleteTodoHandler=function deleteTodoHandler(e){setTodos(todos.filter(function(item){return item.id!==todo.id;}));};return/*#__PURE__*/_jsxs(ListGroup.Item,{className:\"mb-2 d-flex\",style:{borderRadius:\"14px\",justifyContent:\"space-between\"},children:[/*#__PURE__*/_jsx(\"div\",{className:\"d-flex align-items-center justify-content-center\",style:{fontSize:\"15px\",textDecoration:todo[\"completed\"]?\"line-through\":\"none\"},children:todo[\"text\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex\",style:{justifyContent:\"space-between\"},children:[/*#__PURE__*/_jsx(Button,{type:\"reset\",variant:\"primary\",a:true,className:\" d-flex align-items-center justify-content-center mx-1\",style:{height:\"30px\"},onClick:completeTodoHandler,children:/*#__PURE__*/_jsx(MdDone,{})}),/*#__PURE__*/_jsx(Button,{type:\"reset\",variant:\"danger\",className:\" d-flex align-items-center justify-content-center\",style:{height:\"30px\"},onClick:deleteTodoHandler,children:/*#__PURE__*/_jsx(MdDeleteForever,{})})]})]});};var List=function List(_ref3){var todos=_ref3.todos,setTodos=_ref3.setTodos;return/*#__PURE__*/_jsx(ListGroup,{className:\"mx-2\",variant:\"flush\",children:todos.map(function(todo){return/*#__PURE__*/_jsx(Todo,{todos:todos,setTodos:setTodos,todo:todo},Math.random()*1000);})});};var TodoList=function TodoList(_ref4){var todos=_ref4.todos,setTodos=_ref4.setTodos,input=_ref4.input,setInput=_ref4.setInput;return/*#__PURE__*/_jsx(Card,{style:{border:\"1px solid black\"},children:/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsx(Card.Title,{className:\"text-center\",style:{color:\"black\",fontSize:\"24px\",textTransform:\"uppercase\"},children:/*#__PURE__*/_jsx(\"h2\",{children:\"todo list\"})}),/*#__PURE__*/_jsx(Card.Subtitle,{className:\"text-center mb-3\",style:{color:\"grey\",textTransform:\"capitalize\"},children:\"add your tasks here\"}),/*#__PURE__*/_jsx(AddTodo,{todos:todos,setTodos:setTodos,input:input,setInput:setInput}),/*#__PURE__*/_jsx(List,{todos:todos,setTodos:setTodos})]})});};export default TodoList;","map":{"version":3,"sources":["/home/showmick/todolist-app/src/components/TodoList.jsx"],"names":["React","Card","Button","Form","ListGroup","MdDone","MdDeleteForever","AddTodo","todos","setTodos","input","setInput","addTodoHandler","e","preventDefault","length","text","completed","id","Math","random","justifyContent","border","target","value","Todo","todo","completeTodoHandler","tempTodos","map","item","deleteTodoHandler","filter","borderRadius","fontSize","textDecoration","height","List","TodoList","color","textTransform"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Button, Form, ListGroup } from \"react-bootstrap\";\nimport { MdDone, MdDeleteForever } from \"react-icons/md\";\n\nconst AddTodo = ({ todos, setTodos, input, setInput }) => {\n  const addTodoHandler = (e) => {\n    e.preventDefault();\n    if (input.length < 1) {\n      return;\n    }\n    setTodos([\n      ...todos,\n      {\n        text: input,\n        completed: false,\n        id: Math.random() * 1000,\n      },\n    ]);\n    setInput(\"\");\n  };\n\n  return (\n    <Form>\n      <Form.Group className='mb-3 mx-3'>\n        <Form.Label>Add a Task</Form.Label>\n        <div className='d-flex' style={{ justifyContent: \"space-between\" }}>\n          <Form.Control\n            className='mb-1'\n            type='text'\n            value={input}\n            style={{ border: \"1px solid black\" }}\n            placeholder='Task Name'\n            onChange={(e) => {\n              setInput(e.target.value);\n            }}></Form.Control>\n          <Button\n            className='h-100 mx-1'\n            variant='secondary'\n            type='submit'\n            onClick={addTodoHandler}>\n            Add\n          </Button>\n        </div>\n      </Form.Group>\n    </Form>\n  );\n};\n\nconst Todo = ({ todos, setTodos, todo }) => {\n  const completeTodoHandler = (e) => {\n    const tempTodos = [...todos];\n    tempTodos.map((item) => {\n      if (item.id === todo.id) {\n        item.completed = !item.completed;\n        setTodos(tempTodos);\n        return;\n      }\n    });\n  };\n\n  const deleteTodoHandler = (e) => {\n    setTodos(todos.filter((item) => item.id !== todo.id));\n  };\n\n  return (\n    <ListGroup.Item\n      className='mb-2 d-flex'\n      style={{\n        borderRadius: \"14px\",\n        justifyContent: \"space-between\",\n      }}>\n      <div\n        className='d-flex align-items-center justify-content-center'\n        style={{\n          fontSize: \"15px\",\n          textDecoration: todo[\"completed\"] ? \"line-through\" : \"none\",\n        }}>\n        {todo[\"text\"]}\n      </div>\n      <div className='d-flex' style={{ justifyContent: \"space-between\" }}>\n        <Button\n          type='reset'\n          variant='primary'\n          a\n          className=' d-flex align-items-center justify-content-center mx-1'\n          style={{ height: \"30px\" }}\n          onClick={completeTodoHandler}>\n          <MdDone />\n        </Button>\n        <Button\n          type='reset'\n          variant='danger'\n          className=' d-flex align-items-center justify-content-center'\n          style={{ height: \"30px\" }}\n          onClick={deleteTodoHandler}>\n          <MdDeleteForever />\n        </Button>\n      </div>\n    </ListGroup.Item>\n  );\n};\n\nconst List = ({ todos, setTodos }) => {\n  return (\n    <ListGroup className='mx-2' variant='flush'>\n      {todos.map((todo) => {\n        return (\n          <Todo\n            key={Math.random() * 1000}\n            todos={todos}\n            setTodos={setTodos}\n            todo={todo}\n          />\n        );\n      })}\n    </ListGroup>\n  );\n};\n\nconst TodoList = ({ todos, setTodos, input, setInput }) => {\n  return (\n    <Card style={{ border: \"1px solid black\" }}>\n      <Card.Body>\n        <Card.Title\n          className='text-center'\n          style={{ color: \"black\", fontSize: \"24px\", textTransform: \"uppercase\"}}>\n          <h2>todo list</h2>\n        </Card.Title>\n        <Card.Subtitle\n          className='text-center mb-3'\n          style={{ color: \"grey\", textTransform: \"capitalize\" }}>\n          add your tasks here\n        </Card.Subtitle>\n        <AddTodo\n          todos={todos}\n          setTodos={setTodos}\n          input={input}\n          setInput={setInput}\n        />\n        <List todos={todos} setTodos={setTodos} />\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}